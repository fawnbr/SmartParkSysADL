Model newElement ; Requirement GerenciarEstacionamento ( 1 ) { text = "\"O sistema deve gerir todos os recursos utilizados pelo estacionamento.\"" Requirement GerenciarUsuarios ( 1.1 ) { text = "\"O sistema deve ser capaz de gerenciar usuários do sistema.\"" } Requirement GerenciarEntradaESaida ( 1.2 ) { text = "\"O sistema deve controlar o acesso de entrada e saída a partir da leitura da placa do veículo.\"" } Requirement GerenciarPagamento ( 1.3 ) { text = "\"O sistema deve fornecer mecanismos de precificar a permanência no estacionamento e mecanismos para efetuar o pagamento.\"" } Requirement GerenciarVagasLivres ( 1.4 ) { text = "\"O sistema deve conseguir gerenciar as vagas livres e ocupadas.\"" } } Requirement GerenciarFuncionarios ( 1.1.1 ) { text = "\"O sistema deve gerenciar funcionários e controlar acesso a partir de seus respectivos perfis.\"" derive GerenciarEstacionamento.GerenciarUsuarios ; } Requirement GerenciarMotoristas ( 1.1.2 ) { text = "\"O sistema deve gerenciar motoristas e controlar acesso a partir de seus respectivos perfis.\"" derive GerenciarEstacionamento.GerenciarUsuarios ; } Requirement LiberarEntrada ( 1.2.1 ) { text = "\"O sistema deve abrir a cancela automaticamente após leitura da placa do veículo.\"" satisfied by Componentes.CancelaCP ; derive GerenciarEstacionamento.GerenciarEntradaESaida ; } Requirement LiberarSaida ( 1.2.2 ) { text = "\"O sistema deve abrir a cancela automaticamente após ler a placa do veículo e confirmar pagamento.\"" satisfied by Componentes.CancelaCP ; derive GerenciarEstacionamento.GerenciarEntradaESaida ; } Requirement EfetuarPagamento ( 1.3.1 ) { text = "\"O sistema deve fornecer mecanismos para efetuar o pagamento.\"" satisfied by Componentes.TerminalDePagamentoCP ; derive GerenciarEstacionamento.GerenciarPagamento ; } Requirement PrecificarPermanencia ( 1.3.2 ) { text = "\"O sistema deve permitir precificar a permanência no estacionamento.\"" derive GerenciarEstacionamento.GerenciarPagamento ; } Requirement Escalabilidade ( 2 ) { text = "\"O sistema deve possuir flexibilidade para ser possível escalar o sistema.\"" } Requirement Disponibilidade ( 3 ) { text = "\"O sistema deve permitir múltiplos meios de realizar uma mesma atividade para manter-se disponível.\"" } package Componentes { import Conectores ; import Portas ; boundary
	component def CancelaCP { }
	component def CameraDeEntradaCP { }
	component def CameraDeSaidaCP { }
	component def TerminalDePagamentoCP { }
	component def SensorDePresencaCP { ports : sensorPresencaOut : SensorAtivoOPT ; }
	component def DisplayLedCP { } component def SistemaCentralCP { configuration { components : CameraDeEntradaCP : CameraDeEntradaCP ; CameraDeSaidaCP : CameraDeSaidaCP ; CancelaCP : CancelaCP ; DisplayLedCP : DisplayLedCP ; TerminalDePagamentoCP : TerminalDePagamentoCP ; controladorCentral : ControladorCentralCP ; ControladorDePagamentos : ControladorDePagamentosCP ; ReconhecedorDePlacas : ReconhecedorDePlacasCP ; SensorDePresencaCP : SensorDePresencaCP { using ports : sensorPresencaOut : SensorAtivoOPT ; } GerenciadorDeVagasCP : GerenciadorDeVagasCP { using ports : sensorPresencaIn : SensorAtivoIPT ; } connectors : sinalSensor : SinalSensorPresenca bindings sensorPresencaOut = sensorPresencaIn ; } }
	component def ControladorDePagamentosCP { }
	component def GerenciadorDeVagasCP { ports : sensorPresencaIn : SensorAtivoIPT ; }
	component def ReconhecedorDePlacasCP { }
	component def ControladorCentralCP { } } package Portas { import Tipos ; port def SensorAtivoOPT { flow out Ocupado } port def SensorAtivoIPT { flow in Ocupado } } package Conectores { import Portas ; connector def SinalSensorPresenca { } } package Tipos { value type Ocupado { unit = Booleano } unit Booleano } Requirement VisualizarVagasLivres ( 1.4.1 ) { text = "\"O sistema deve possuir mecanismos de visualizar as vagas livres.\"" satisfied by Componentes.DisplayLedCP ; derive GerenciarEstacionamento.GerenciarVagasLivres ; } Requirement PerceberOcupacaoVagas ( 1.4.2 ) { text = "\"O sistema deve possuir sensores que percebam se uma vaga está ocupada ou não.\"" satisfied by Componentes.SensorDePresencaCP ; derive GerenciarEstacionamento.GerenciarVagasLivres ; }